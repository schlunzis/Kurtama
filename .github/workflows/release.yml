name: Release Artifacts

on:
  workflow_call:
    inputs:
      tag:
        required: true
        type: string
        description: "The tag to use for the release."
      prerelease:
        required: true
        type: boolean
        description: "Whether the release is a pre-release."

jobs:
  release-docker:
    name: Build and Release Docker Image
    uses: ./.github/workflows/build-docker.yml
    with:
      version: ${{ inputs.tag }}
    secrets: inherit
  
  download-artifacts:
    name: Download Artifacts
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        name: Download Client deb-Package
        with:
          name: client-deb
      - uses: actions/download-artifact@v4
        name: Download Client exe
        with:
          name: client-exe
      - uses: actions/download-artifact@v4
        name: Download Client JAR for Linux
        with:
          name: client-jar-linux
      - uses: actions/download-artifact@v4
        name: Download Client JAR for Windows
        with:
          name: client-jar-win
      - uses: actions/download-artifact@v4
        name: Download Server JAR for Linux
        with:
          name: server-jar-linux
      - uses: actions/download-artifact@v4
        name: Download Server JAR for Windows
        with:
          name: server-jar-win

      - name: List artifacts
        run: ls -al

  release:
    needs: download-artifacts
    runs-on: ubuntu-latest
    name: Release Artifacts
    steps:
      - name: Create release body
        run: |
          if [ "${{ inputs.prerelease }}" = "true" ]; then
            echo "This is an alpha release." > release-body.md
            echo "It is not recommended for production use." >> release-body.md
            echo "It is intended for testing and feedback." >> release-body.md
            echo "Please report any issues on the issue tracker." >> release-body.md
          else
            echo "This is a stable release." > release-body.md
            echo "It is recommended for production use." >> release-body.md
            echo "Please report any issues on the issue tracker." >> release-body.md
          fi

      - uses: ncipollo/release-action@v1
        name: Create Release and Upload Artifacts
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ inputs.tag }}
          commit: ${{ github.sha }}
          prerelease: ${{ inputs.prerelease }}
          name: "Alpha Release: ${{ inputs.tag }}"
          artifacts: "*.jar,*.deb,*.exe"
          bodyFile: "release-body.md"
    
  upload-ppa:
    needs: download-artifacts
    if: ${{ inputs.prerelease }} == 'false'
    name: Release to PPA
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        name: Access PPA
        with:
          repository: schlunzis/ppa
          path: ppa
          token: ${{ secrets.PAT }}
      - name: Upload to PPA
        run: |
          cp *.deb ppa/ubuntu/
          cd ppa
          git config user.name "Package deployer (Bot)"
          git config user.email "kurtama@schlunzis.org"
          git add .
          git commit -m "Kurtama Client $GITHUB_REF_NAME"
          git push
